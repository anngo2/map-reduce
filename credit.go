package main

//
// a MR application you need to develop
// go build -buildmode=plugin credit.go
//

import (
	"cs350/mr"
	"log"
	"strconv"
	"strings"
)

// The map function is called once for each file of input. The first
// argument is the name of the input file, and the second is the
// file's complete contents. You should ignore the input file name,
// and look only at the contents argument. The return value is a slice
// of key/value pairs.
func Map(filename string, contents string) []mr.KeyValue {
	// your inplementation here
	content := strings.Replace(contents, "\r", "\n", -1)
	lines := strings.Split(content, "\n")

	// split contents into an array of words.

	kva := []mr.KeyValue{}
	for _, w := range lines[1:] {
		fields := strings.SplitN(w, ",", 4)
		if len(fields) < 4 {
			continue
		}
		years := fields[2]
		// fmt.Println(fields)
		cscore, err := strconv.Atoi(fields[3])

		if err != nil {
			log.Fatal("Can't read dir")

		}

		if years == "2023" && cscore > 400 {
			kv := mr.KeyValue{fields[1], "1"}
			kva = append(kva, kv)
		}

	}
	return kva
}

// The reduce function is called once for each key generated by the
// map tasks, with a list of all the values created for that key by
// any map task.
func Reduce(key string, values []string) string {
	// your inplementation here
	return strconv.Itoa(len(values))
}
